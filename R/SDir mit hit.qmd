---
title: "SDir mit hit"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

#### Interindividual differences in training responsiveness (SDir)

```{r}

# In this code chunk data is prepared to calculate SDir for the MIT and HIT block using CON


# Preparing data for analyses
SDir_all_data <- data %>% 
  group_by(period, variable) %>% 
  summarise(across(c(change, pre), list(m = mean, s = sd), na.rm = TRUE)) %>% 
  pivot_wider(names_from = period, values_from = c(change_m, change_s, pre_m, pre_s)) %>%
  print()


```

##### Endurance performance index

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "index") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit <- 
  sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_con^2) %>% print()

SDir_hit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_hit^2) %>% print() # SD con larger than SD hit. Minus is added in manuscript

# CI (95%) for SDir MIT
# Calculating standard error (se) to use in CI calculations
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# Comment to the code:
# Cannot take the square root of a negative value (SDir^2 - 1.96*standard error = a negative value).This is solved by squaring the negative value, and then taking the square root of this value (= the same value, just positive). Can then take the square root of SDir^2 - 1.96*standard error. Minus is added when the value is reported in the manuscript. This also applies for negative lower CIÂ´s (see comments "# Minus added in manuscript")



# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (17-1)) + # n = 17 in HIT as one participant did not complete the 15min cycling trial, which is part of the index
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()


confint_upper_hit <- sqrt(-(SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt((-((SDir_hit)^2) - (1.96 * standard_error))^2)) %>% print() # Add minus in manuscript

# Comment to the code:
# Also see comment abov.
# As the SDir for HIT is negative, minus is added in the equation for the calculation of both the upper and lower CI. This applies for all calculations done with a negative SDir


```

##### PO15min

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "w.rel.15tt") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit_hit <- sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_hit^2) %>% print()

SDir_mit <- sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_con^2) %>% print() 

SDir_hit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_hit^2) %>% print() # Minus is added in manuscript


# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_hit^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (17-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()
# n = 17 in HIT as one participant did not complete the 15min cycling trial

confint_upper_hit <- sqrt(-(SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt((-(SDir_hit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


```

##### POVO2max

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "w.rel.max") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit <- sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_con^2) %>% print() 

SDir_hit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_hit^2) %>% print() # Minus is added in manuscript

# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_hit <- sqrt(-(SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt((-(SDir_hit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


```

##### PO4mmol

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "w.rel.4mmol") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_mit^2) %>% print() # Minus is added in manuscript

SDir_hit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_hit^2) %>% print() # Minus is added in manuscript

# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt(-(SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt((-(SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_hit <- sqrt(-(SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt((-(SDir_hit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


```

##### VO2max

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "vo2.rel.max") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit <- sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_con^2) %>% print() 

SDir_hit <- sqrt(SDir_data$change_s_hit^2 - SDir_data$change_s_con^2) %>% print() 

# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_hit <- sqrt((SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt(((SDir_hit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


```

##### % of VO2max at 4mmol/L \[La-\]

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "p.vo2.4mmol") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit <- sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_con^2) %>% print() 

SDir_hit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_hit^2) %>% print() # Minus is added in manuscript

# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_hit <- sqrt(-(SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt((-(SDir_hit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


```

##### GE

```{r}

# Selecting outcome variable
SDir_data <- SDir_all_data %>% filter(variable == "ge.3.fresh") %>% print()

# Smallest worthwhile change (SWC)
swc <- SDir_data %>% summarise(swc = pre_s_con*0.2) %>%  print()
  
# SDir for the MIT and HIT block
SDir_mit <- sqrt(SDir_data$change_s_mit^2 - SDir_data$change_s_con^2) %>% print() 

SDir_hit <- sqrt(SDir_data$change_s_con^2 - SDir_data$change_s_hit^2) %>% print() # Minus is added in manuscript

# CI (95%) for SDir MIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_mit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_mit <- sqrt((SDir_mit^2) + (1.96 * standard_error)) %>% print() 
confint_lower_mit <- sqrt(sqrt(((SDir_mit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript

# CI (95%) for SDir HIT
standard_error <- sqrt(2* ( ((SDir_data$change_s_hit^4)/ (18-1)) + 
                              ((SDir_data$change_s_con^4)/ (18-1)) ) ) %>% print()

confint_upper_hit <- sqrt(-(SDir_hit^2) + (1.96 * standard_error)) %>% print()
confint_lower_hit <- sqrt(sqrt((-(SDir_hit^2) - (1.96 * standard_error))^2)) %>% print() # Minus is added in manuscript


```

#### Figure 3

```{r}

# In this code chunk Figure 3 is made

# Setting widths, sizes, scales, and shapes in the figure
axis.width <- 0.4
axis.ticks.width <- 0.4
lable.size <- 8
line.width <- 0.4
point.size <- 1
col_scale <- c("#228B22", "#104E8B", "#8B0000") # green, blue, red
shape_scale <- c(15, 19, 17) # Square, Dot and triangle

# Creating the figure
figure3 <- data %>% 
  filter(variable == "w.rel.15tt") %>%
  mutate(period = factor(period, levels = c("con", "mit", "hit"), 
                        labels = c("CON", "MIT block", "HIT block"))) %>%
  ggplot(aes(x=period, y=change)) +
  geom_rect(aes(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=0), fill="aliceblue") +
  geom_line(aes(group = id), linewidth = line.width, linetype = "dashed", colour = "grey") +
  stat_summary(aes(colour="mean",group=1), fun = mean, geom="line", linewidth=line.width, colour = "black") +
  geom_point(aes(shape=period, color=period), size = point.size, alpha = 0.75) +
  scale_shape_manual(values = c(15, 17, 16)) +
  scale_color_manual(values = c("#228B22", "#104E8B", "#8B0000")) +
  scale_y_continuous(limits = c(-1, 1), 
                     breaks = seq(from = -1, to = 1, by = 0.25), 
                     expand = c(0.05, 0.05)) +
  labs(x = "Training period", y = expression("â PO"["15-min"]*"  (W â kg"^-1*") ")) +
  theme_pubr() +
  theme(text=element_text(family="serif", face="plain", size=lable.size),
        legend.position = "none",
        axis.line.x = element_line(linewidth = axis.width),
        axis.line.y = element_line(linewidth = axis.width),
        axis.ticks = element_line(linewidth = axis.ticks.width),
        axis.ticks.length = unit(0.05, "cm"))
figure3 

# Figure size
# Width =  1 column = 8.5 cm
# height of figure = 9 cm

saveRDS(figure3, "./figures/rds/figure3.RDS")

ggsave("figures/figure3.tiff", plot = figure3, width = 8.5, height = 9, 
       dpi = 800,
       units = "cm", device= "tiff")
```
