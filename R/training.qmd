---
title: "training"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Training diary

```{r}

# In this code chunk training diary data for the participants performing the
# MIT and HIT block, as well as the participants performing the control period
# (CON) are calculated


# Saving the training diary data
training_diary <-read_excel("data/training_diary_ir_data.xlsx", na = "na") %>% 
  print()

# Period and group to factor
training_diary$period <- as.factor(training_diary$period)


# Making a table with mean (SD) for the given training varibles for the whole intervention
training <-
  training_diary %>% 
  mutate(trimp.1 = (zone.1 + zone.2)* 1) %>%
  mutate(trimp.2 = (zone.3 + zone.4)* 2) %>%
  mutate(trimp.3 = (zone.5)* 3) %>%
  mutate(total.trimp = trimp.1 + trimp.2 + trimp.3) %>% 
  mutate(strength.heavy = strength.heavy) %>%
  mutate(strength.general = strength.general) %>%
  mutate(total.t.training = total.t.training) %>%
  filter(!period  %in% c("pre.mit", "pre.hit", "pre.con")) %>%
  group_by(period) %>%
  print()



training_table <- training %>%
  group_by(period) %>%
  summarise(across(c(zone.1:zone.5, trimp.1:trimp.3, total.trimp, strength.heavy, strength.general, total.t.training, feeling.legs), 
                   list(m = mean, s = sd), na.rm = TRUE)) %>% 
  mutate("Zone 1 (min)" = paste0(round(zone.1_m, 1), " (", round(zone.1_s, 1),")"),
               "Zone 2 (min)" = paste0(round(zone.2_m, 1), " (", round(zone.2_s, 1),")"),
               "Zone 3 (min)" = paste0(round(zone.3_m, 1), " (", round(zone.3_s, 1),")"),
               "Zone 4 (min)" = paste0(round(zone.4_m, 1), " (", round(zone.4_s, 1),")"),
               "Zone 5 (min)" = paste0(round(zone.5_m, 1), " (", round(zone.5_s, 1),")"),
               "Trimp 1" = paste0(round(trimp.1_m, 0), " (", round(trimp.1_s, 0),")"),
               "Trimp 2" = paste0(round(trimp.2_m, 0), " (", round(trimp.2_s, 0),")"),
               "Trimp 3" = paste0(round(trimp.3_m, 0), " (", round(trimp.3_s, 0),")"),
               "Total trimp" = paste0(round(total.trimp_m, 0), " (", round(total.trimp_s, 0),")"),
               "Maximal strength (min)" = paste0(round(strength.heavy_m, 1), 
                                                 " (", round(strength.heavy_s, 1),")"),
               "General strength (min)" = paste0(round(strength.general_m, 1), 
                                                 " (", round(strength.general_s, 1),")"),
               "Total training (min)" = paste0(round(total.t.training_m, 1), 
                                               " (", round(total.t.training_s, 1),")"),
               "Feeling legs (1-9)" = paste0(round(feeling.legs_m, 1), 
                                             " (", round(feeling.legs_s, 1),")") ) %>%
  select(period, "Zone 1 (min)", "Zone 2 (min)", "Zone 3 (min)", "Zone 4 (min)", "Zone 5 (min)", "Trimp 1", "Trimp 2", "Trimp 3", "Total trimp", "Maximal strength (min)", "General strength (min)", "Total training (min)", "Feeling legs (1-9)") %>%
  pivot_longer(names_to = "variable", values_to = "stat", "Zone 1 (min)":"Feeling legs (1-9)") %>% 
  pivot_wider(names_from = period, values_from = stat) %>%
  print()


write_xlsx(training_table, "C:\\ir-mit-hit\\training_ir.xlsx")

mod <- lmer(total.t.training ~ period + (1|id), data = training) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))

mod <- lmer(total.trimp ~ period + (1|id), data = training) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))

mod <- lmer(trimp.1 ~ period + (1|id), data = training) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))

mod <- lmer(trimp.2 ~ period + (1|id), data = training) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))

mod <- lmer(trimp.3 ~ period + (1|id), data = training) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))

mod <- lmer(feeling.legs ~ period + (1|id), data = training) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


```


# Interval session data

```{r}


# Differences between MIT and HIT
mod <- lmer(pi.total.kj ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(pi ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(rel.vo2 ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(sec.90.vo2 ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(rel.hr ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(sec.90.hr ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(p.w ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(la ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(pr ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(rpe ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))


mod <- lmer(s.rpe ~ period + (1|id), data = sessions_data) %>% print()
summary(mod)
pairs(emmeans(mod, specs = ~ period))

# Making a table with all the variables I want to compare between MIT and HIT
table <- sessions_data %>% 
 group_by(period) %>% 
        summarise(pi.total.kj.m = mean(pi.total.kj, na.rm = TRUE),
                  pi.total.kj.s = sd(pi.total.kj, na.rm = TRUE),
          
                  pi.m = mean(pi, na.rm = TRUE),
                  pi.s = sd(pi, na.rm = TRUE),
                  
                  vo2.kg.m = mean(vo2.kg, na.rm = TRUE),
                  vo2.kg.s = sd(vo2.kg, na.rm = TRUE),
                  
                  rel.vo2.m = mean(rel.vo2, na.rm = TRUE),
                  rel.vo2.s = sd(rel.vo2, na.rm = TRUE),
                  
                  sec.90.vo2.m = mean(sec.90.vo2, na.rm = TRUE),
                  sec.90.vo2.s = sd(sec.90.vo2, na.rm = TRUE),
                  
                  hr.m = mean(hr, na.rm = TRUE),
                  hr.s = sd(hr, na.rm = TRUE),
                  
                  rel.hr.m = mean(rel.hr, na.rm = TRUE),
                  rel.hr.s = sd(rel.hr, na.rm = TRUE),
                  
                  sec.90.hr.m = mean(sec.90.hr, na.rm = TRUE),
                  sec.90.hr.s = sd(sec.90.hr, na.rm = TRUE),
                  
                  rel.w.m = mean(rel.w, na.rm = TRUE),
                  rel.w.s = sd(rel.w, na.rm = TRUE),
                  
                  p.w.m = mean(p.w, na.rm = TRUE),
                  p.w.s = sd(p.w, na.rm = TRUE),
                  
                  la.m = mean(la, na.rm = TRUE),
                  la.s = sd(la, na.rm = TRUE),
                  
                  pr.m = mean(pr, na.rm = TRUE),
                  pr.s = sd(pr, na.rm = TRUE),
                  
                  rpe.m = mean(rpe, na.rm = TRUE),
                  rpe.s = sd(rpe, na.rm = TRUE),

                  s.rpe.m = mean(s.rpe, na.rm = TRUE),
                  s.rpe.s = sd(s.rpe, na.rm = TRUE)) %>% 
  
  # Changing the names of the variables and choosing decimals 
        mutate("Metabolic power input (kJ)" = paste0(round(pi.total.kj.m, 0), " (", round(pi.total.kj.s, 0),")"),
               "Metabolic power input (kJ/sec)" = paste0(round(pi.m, 2), " (", round(pi.s, 2),")"),
               "VO2 (ml/min/kg)" = paste0(round(vo2.kg.m, 1), " (",  round(vo2.kg.s, 1),")"),
               "% of VO2max (%)" = paste0(round(rel.vo2.m, 1), " (",  round(rel.vo2.s, 1),")"),
               "Time > 90% of VO2max (sec)" = paste0(round(sec.90.vo2.m, 0), " (",  round(sec.90.vo2.s, 0),")"),
               "HR (bpm)" = paste0(round(hr.m, 0), " (",  round(hr.s, 0),")"),
               "% of HRmax (%)" = paste0(round(rel.hr.m, 1), " (",  round(rel.hr.s, 1),")"),
               "Time > 90% of HRmax (sec)" = paste0(round(sec.90.hr.m, 0), " (",  round(sec.90.hr.s, 0),")"),
               "Power output (W/kg)" = paste0(round(rel.w.m, 2), " (", round(rel.w.s, 2),")"),
               "% of Wmax (%)" = paste0(round(p.w.m, 1), " (", round(p.w.s, 1),")"),
               "La- (mmol/L)" = paste0(round(la.m, 1), " (", round(la.s, 1),")"),
               "PR (1-7)" = paste0(round(pr.m, 1), " (", round(pr.s, 1),")"),
               "RPE (6-20)" = paste0(round(rpe.m, 1), " (", round(rpe.s, 1),")"),
               "sRPE (0-10)" = paste0(round(s.rpe.m, 1), " (", round(s.rpe.s, 1),")")) %>% 
  
    
        # Choosing which variables to put in the table
        select(period, "Metabolic power input (kJ)", "Metabolic power input (kJ/sec)", "VO2 (ml/min/kg)", "% of VO2max (%)", "Time > 90% of VO2max (sec)", "HR (bpm)", "% of HRmax (%)", "Time > 90% of HRmax (sec)", "Power output (W/kg)", "% of Wmax (%)", "La- (mmol/L)", "PR (1-7)", "RPE (6-20)", "sRPE (0-10)") %>%
        
        # Making the table prettier
        pivot_longer(names_to = "variable", values_to = "stat", "Metabolic power input (kJ)":"sRPE (0-10)") %>% 
        pivot_wider(names_from = period, values_from = stat)  %>% view()

```


